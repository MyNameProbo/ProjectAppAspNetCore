// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VueAppProjectManagement.Project.Infrastructure;

#nullable disable

namespace VueAppProjectManagement.Server.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VueAppProjectManagement.Project.Domain.MaterialTable", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Spec")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaterialId");

                    b.ToTable("MaterialTables");
                });

            modelBuilder.Entity("VueAppProjectManagement.Project.Domain.ProjectTable", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectManager")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stage")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ProjectId");

                    b.ToTable("ProjectTables");
                });

            modelBuilder.Entity("VueAppProjectManagement.Project.Domain.WorkerTable", b =>
                {
                    b.Property<Guid>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WorkerId");

                    b.ToTable("WorkerTables");
                });

            modelBuilder.Entity("VueAppProjectManagement.Project.Domain.WorkingLine", b =>
                {
                    b.Property<Guid>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.Property<Guid>("WorkingId")
                        .HasColumnType("uuid");

                    b.HasKey("LineId");

                    b.HasIndex("WorkingId");

                    b.ToTable("WorkingLines");
                });

            modelBuilder.Entity("VueAppProjectManagement.Project.Domain.WorkingTable", b =>
                {
                    b.Property<Guid>("WorkingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WorkerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("WorkingDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("WorkingId");

                    b.ToTable("WorkingTables");
                });

            modelBuilder.Entity("VueAppProjectManagement.Project.Domain.WorkingLine", b =>
                {
                    b.HasOne("VueAppProjectManagement.Project.Domain.WorkingTable", "WorkingTable")
                        .WithMany("WorkingLines")
                        .HasForeignKey("WorkingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkingTable");
                });

            modelBuilder.Entity("VueAppProjectManagement.Project.Domain.WorkingTable", b =>
                {
                    b.Navigation("WorkingLines");
                });
#pragma warning restore 612, 618
        }
    }
}
